#!/usr/bin/env python
import os, sys, tempfile, subprocess, shutil, re, argparse

parser = argparse.ArgumentParser(description='Pack a robot.zip from user code.')
parser.add_argument('usercode',
                    help='user code source directory, containing a robot.py')
parser.add_argument('output',
                    help='output zip file')

args = parser.parse_args()

USER_CODE_DIR, OUTPUT_ZIP = args.usercode, args.output

if not os.path.isdir( USER_CODE_DIR ):
    print >>sys.stderr, "Error: Supplied user directory path is not a directory."
    exit(1)

REPO_ROOT = os.path.dirname( __file__ )
BASE_DIR = os.path.join( REPO_ROOT, "base" )
assert os.path.isdir( BASE_DIR )

# Temporary directory for constructing everything inside
tmpd = tempfile.mkdtemp( suffix="-pyenv" )

subprocess.check_call( "cp -r %s/* %s" % (BASE_DIR, tmpd),
                       shell = True )

# Copy in the user's code
subprocess.check_call( ["cp", "-r", USER_CODE_DIR, os.path.join( tmpd, "user" )] )

# Temporary directory for the zipfile to reside in
ziptmpd = tempfile.mkdtemp( suffix="-pyenv" )
tmpzip = os.path.join( ziptmpd, "robot.zip" )

subprocess.check_call( ["zip", "-9qr", tmpzip, "./"], cwd = tmpd )

if os.path.exists( OUTPUT_ZIP ):
    os.unlink( OUTPUT_ZIP )

shutil.move( tmpzip, OUTPUT_ZIP )

shutil.rmtree( ziptmpd )
shutil.rmtree( tmpd )

